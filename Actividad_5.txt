Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 12921788
Server version: 8.0.40 Source distribution

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> use Ximena2ge$default;
Database changed
mysql> CREATE TABLE RegistroProceso (
    ->     Flujo VARCHAR(50),
    ->     Paso INT,
    ->     Estado VARCHAR(50)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> INSERT INTO RegistroProceso (Flujo, Paso, Estado)
    -> VALUES
    ->     ('Alpha', 1, 'Error'),
    ->     ('Alpha', 2, 'Finalizado'),
    ->     ('Alpha', 3, 'Corriendo'),
    ->     ('Bravo', 1, 'Finalizado'),
    ->     ('Bravo', 2, 'Finalizado'),
    ->     ('Charlie', 1, 'Corriendo'),
    ->     ('Charlie', 2, 'Corriendo'),
    ->     ('Delta', 1, 'Error'),
    ->     ('Delta', 2, 'Error'),
    ->     ('Echo', 1, 'Corriendo'),
    ->     ('Echo', 2, 'Finalizado');
Query OK, 11 rows affected (0.01 sec)
Records: 11  Duplicates: 0  Warnings: 0

mysql> SELECT Flujo,
    ->     CASE
    ->         WHEN COUNT(DISTINCT Estado) = 1 THEN MAX(Estado)
    ->         WHEN 'Error' IN (GROUP_CONCAT(Estado)) AND ('Finalizado' IN (GROUP_CONCAT(Estado)) OR 'Corriendo' IN (GROUP_CONCAT(Estado))) THEN 'Indeterminado'
    ->         WHEN 'Finalizado' IN (GROUP_CONCAT(Estado)) AND 'Corriendo' IN (GROUP_CONCAT(Estado)) AND 'Error' NOT IN (GROUP_CONCAT(Estado)) THEN 'Corriendo'
    ->         ELSE NULL
    ->     END AS Estado_General
    -> FROM RegistroProceso
    -> GROUP BY Flujo;
+---------+----------------+
| Flujo   | Estado_General |
+---------+----------------+
| Alpha   | NULL           |
| Bravo   | Finalizado     |
| Charlie | Corriendo      |
| Delta   | Error          |
| Echo    | NULL           |
+---------+----------------+
5 rows in set (0.01 sec)

mysql> SELECT Flujo,
    ->     CASE
    ->     WHEN COUNT(DISTINCT Estado) = 1 THEN MAX(Estado)
    ->     WHEN 'Error' IN (SELECT Estado FROM RegistroProceso WHERE RegistroProceso.Flujo = rp.Flujo)
    ->     AND ('Finalizado' IN (SELECT Estado FROM RegistroProceso WHERE RegistroProceso.Flujo = rp.Flujo)
    ->     OR 'Corriendo' IN (SELECT Estado FROM RegistroProceso WHERE RegistroProceso.Flujo = rp.Flujo))
    ->     THEN 'Indeterminado'
    ->     WHEN 'Finalizado' IN (SELECT Estado FROM RegistroProceso WHERE RegistroProceso.Flujo = rp.Flujo)
    ->     AND 'Corriendo' IN (SELECT Estado FROM RegistroProceso WHERE RegistroProceso.Flujo = rp.Flujo)
    ->     AND 'Error' NOT IN (SELECT Estado FROM RegistroProceso WHERE RegistroProceso.Flujo = rp.Flujo)
    ->     THEN 'Corriendo'
    ->     END AS Estado_General
    -> FROM RegistroProceso rp
    -> GROUP BY Flujo;
+---------+----------------+
| Flujo   | Estado_General |
+---------+----------------+
| Alpha   | Indeterminado  |
| Bravo   | Finalizado     |
| Charlie | Corriendo      |
| Delta   | Error          |
| Echo    | Corriendo      |
+---------+----------------+
5 rows in set (0.00 sec)

mysql> CREATE TABLE SecuenciaSintaxis (
    -> Id INT,
    -> Sintaxis VARCHAR(100)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> INSERT INTO SecuenciaSintaxis (Id, Sintaxis)
    -> VALUES
    -> (1, 'SELECT'),
    -> (2, 'Producto,'),
    -> (3, 'Precio,'),
    -> (4, 'Disponibilidad,'),
    -> (5, 'FROM'),
    -> (6, 'Productos'),
    -> (7, 'WHERE'),
    -> (8, 'Precio'),
    -> (9, '>100');
Query OK, 9 rows affected (0.00 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> SELECT GROUP_CONCAT(Sintaxis SEPARATOR ' ') AS Sintaxis
    -> FROM SecuenciaSintaxis
    -> ORDER BY Id;
+---------------------------------------------------------------------------+
| Sintaxis                                                                  |
+---------------------------------------------------------------------------+
| SELECT Producto, Precio, Disponibilidad, FROM Productos WHERE Precio >100 |
+---------------------------------------------------------------------------+
1 row in set (0.00 sec)

mysql> CREATE TABLE MarcadoresGlobales (
    -> JugadorA INT,
    -> JugadorB INT,
    -> Marcador INT
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> INSERT INTO MarcadoresGlobales (JugadorA, JugadorB, Marcador)
    -> VALUES
    -> (1001, 2002, 150),
    -> (3003, 4004, 15),
    -> (4004, 3003, 125),
    -> (3003, 4004, 140);
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> SELECT JugadorA, JugadorB, SUM(Marcador) AS TotalMarcador
    -> FROM MarcadoresGlobales
    -> GROUP BY JugadorA, JugadorB;
+----------+----------+---------------+
| JugadorA | JugadorB | TotalMarcador |
+----------+----------+---------------+
|     1001 |     2002 |           150 |
|     3003 |     4004 |           155 |
|     4004 |     3003 |           125 |
+----------+----------+---------------+
3 rows in set (0.00 sec)
mysql> 
mysql> CREATE TABLE MarcadoresGlobales1 (
    -> JugadorA INT,
    -> JugadorB INT,
    -> Marcador INT
    -> );
Query OK, 0 rows affected (0.04 sec)
mysql> INSERT INTO MarcadoresGlobales1 (JugadorA, JugadorB, Marcador)
    -> VALUES
    -> (1001, 2002, 150),
    -> (3003, 4004, 15),
    -> (4004, 3003, 125),
    -> (3003, 4004, 140);
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0
mysql> SELECT 
    -> LEAST(JugadorA, JugadorB) AS JugadorA,
    -> GREATEST(JugadorA, JugadorB) AS JugadorB,
    -> SUM(Marcador) AS TotalMarcador
    -> FROM MarcadoresGlobales1
    -> GROUP BY 
    -> LEAST(JugadorA, JugadorB),
    -> GREATEST(JugadorA, JugadorB);
+----------+----------+---------------+
| JugadorA | JugadorB | TotalMarcador |
+----------+----------+---------------+
|     1001 |     2002 |           150 |
|     3003 |     4004 |           280 |
+----------+----------+---------------+
2 rows in set (0.01 sec)
mysql> SELECT 
    -> LEAST(JugadorA, JugadorB) AS JugadorA,
    -> GREATEST(JugadorA, JugadorB) AS JugadorB,
    -> MAX(Marcador) AS Marcador
    -> FROM MarcadoresGlobales1
    -> GROUP BY 
    -> LEAST(JugadorA, JugadorB),
    -> GREATEST(JugadorA, JugadorB);
+----------+----------+----------+
| JugadorA | JugadorB | Marcador |
+----------+----------+----------+
|     1001 |     2002 |      150 |
|     3003 |     4004 |      140 |
+----------+----------+----------+
2 rows in set (0.00 sec)
mysql> 
